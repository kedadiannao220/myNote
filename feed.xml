<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>penggy Blog</title>
    <link>https://kedadiannao220.github.io/</link>
    <description>Recent content on penggy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 02 Feb 2018 10:13:59 +0800</lastBuildDate>
    
	<atom:link href="https://kedadiannao220.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React--Redux学习</title>
      <link>https://kedadiannao220.github.io/post/react--redux/</link>
      <pubDate>Fri, 02 Feb 2018 10:13:59 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/react--redux/</guid>
      <description>为什么要使用Redux 某个组件要共享 某个组件要改变全局的状态 某个组件状态发生变化了，另外的组件也要变化 某个组件的状态要在各个地方拿到 短小精悍</description>
    </item>
    
    <item>
      <title>AMQ Topic Subsriber Model</title>
      <link>https://kedadiannao220.github.io/post/activemq--topicsubscriber/</link>
      <pubDate>Wed, 27 Dec 2017 16:38:18 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/activemq--topicsubscriber/</guid>
      <description>Topic Subsriber模式 订阅模式分为非持久订阅(Non-Durable Topic Subscribers)和持久订阅模式（Durable Topic Subscr</description>
    </item>
    
    <item>
      <title>Neo4j JavaReference</title>
      <link>https://kedadiannao220.github.io/post/neo4j-javareference/</link>
      <pubDate>Tue, 26 Dec 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/neo4j-javareference/</guid>
      <description>Neo4j JavaReference Extending Neo4j 自定义程序 neo4j里面有一套程序模板，可以让用户进行使用并调用 neo4j-procedure-template 内置程序列表 db.constraints db.indexes db.labels db.propertyKeys db.relationshipTypes dbms.changePassword dbms.components dbms.procedures dbms.queryJmx 远程debugger 在neo4j.c</description>
    </item>
    
    <item>
      <title>MongoDB高级学习</title>
      <link>https://kedadiannao220.github.io/post/mongo/mongodb-%E9%AB%98%E7%BA%A7/</link>
      <pubDate>Thu, 14 Dec 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/mongo/mongodb-%E9%AB%98%E7%BA%A7/</guid>
      <description>execute JS 创建test.js文件，录入以下文字 printjson(db.adminCommand(&#39;listDatabases&#39;)); printjson(db.getCollectionNames()); printjson(pwd()); 执行js mongo --quiet test.js mongo test.js mongo localhost:27017/test test.js 可以指定数据库连接和库名执行 quiet的作用是执行的时候不输出相关的执</description>
    </item>
    
    <item>
      <title>neo4j</title>
      <link>https://kedadiannao220.github.io/post/neo4j/</link>
      <pubDate>Fri, 17 Nov 2017 09:55:42 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/neo4j/</guid>
      <description>索引 建立索引 create index on : BpAppInfo(code) Added 1 index, statement executed in 157 ms. 查看索引 call db.indexes 删除索引 drop index on : BpAppInfo(code) profile 作用是查看查询计划， profile match (n{code:&#39;A_ENDS&#39;}) return n; profile match (n:egfbank_BpAppInfo {code:&#39;A_ENDS&#39;}) return n; create index on : BpAppInfo(code) profile match (n:egfbank_BpAppInfo {code:&#39;A_ENDS&#39;}) return n; profile match (n:egfbank_BpAppInfo)</description>
    </item>
    
    <item>
      <title>MongoDB ReplSet Replication</title>
      <link>https://kedadiannao220.github.io/post/mongo/mongodb-replset-replication/</link>
      <pubDate>Wed, 15 Nov 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/mongo/mongodb-replset-replication/</guid>
      <description>ReplSet Replicatin master的IP： 10.0.1.9 slave IP: 10.0.106.2、10.0.106.6 以replSet形式启动master，replSet名称设置为rs0</description>
    </item>
    
    <item>
      <title>MongoDB Master Slave Replication</title>
      <link>https://kedadiannao220.github.io/post/mongo/mongodb-master-slave-replication/</link>
      <pubDate>Tue, 14 Nov 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/mongo/mongodb-master-slave-replication/</guid>
      <description>Replication&amp;ndash;Master Slave Replication Mongod命令列表 dbpath: 指定数据库文件目录，若不存在，则提示异常 port: 端口号指定 master:指定主节点 slaver:指定从节点 source: 指定主节点</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://kedadiannao220.github.io/about/</link>
      <pubDate>Tue, 14 Nov 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/about/</guid>
      <description>About 个人资料 基本tag 彭甘雨/1992/河南南阳 peng_gy@163.com 18037105737 github 毕业于2014年，本科 现居杭州余杭区余杭街道，信耶稣 性格及爱好 活泼开朗，生活充满了艰辛与</description>
    </item>
    
    <item>
      <title>Java8函数式编程笔记第5章</title>
      <link>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC5%E7%AB%A0--%E9%AB%98%E7%BA%A7%E9%9B%86%E5%90%88%E7%B1%BB%E5%92%8C%E6%94%B6%E9%9B%86%E5%99%A8/</link>
      <pubDate>Fri, 13 Oct 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC5%E7%AB%A0--%E9%AB%98%E7%BA%A7%E9%9B%86%E5%90%88%E7%B1%BB%E5%92%8C%E6%94%B6%E9%9B%86%E5%99%A8/</guid>
      <description>第5章 方法引用</description>
    </item>
    
    <item>
      <title>Java8函数式编程笔记1~2</title>
      <link>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01~2%E7%AB%A0/</link>
      <pubDate>Tue, 10 Oct 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01~2%E7%AB%A0/</guid>
      <description>前言 为什么要阅读本书 如何编写简单、干净、易读的代码，尤其是对于集合的操作 如何简单地使用并行计算提高性能 如何准确地为问题建模 如果写出更简单的并</description>
    </item>
    
    <item>
      <title>Java8函数式编程笔记第3章</title>
      <link>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC3%E7%AB%A0/</link>
      <pubDate>Tue, 10 Oct 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC3%E7%AB%A0/</guid>
      <description>第3章 流 外部迭代与内部迭代 public static void innerLoop() { /** * 运算结果为：50005000共计耗时：3 * 运算结果为：50005000共计耗时：119 */ int sum = 0; Set&amp;lt;Integer&amp;gt; set</description>
    </item>
    
    <item>
      <title>Java8函数式编程笔记第4章</title>
      <link>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC4%E7%AB%A0--%E7%B1%BB%E5%BA%93/</link>
      <pubDate>Tue, 10 Oct 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/java/java8%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%AC%AC4%E7%AB%A0--%E7%B1%BB%E5%BA%93/</guid>
      <description>第4章 类库 数据类型 int占用4字节，Integer占用16字节;Integer为整形对象 在最坏的情况下，Integer[]要比int[]多占</description>
    </item>
    
    <item>
      <title>Maven学习</title>
      <link>https://kedadiannao220.github.io/post/maven/</link>
      <pubDate>Wed, 27 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/maven/</guid>
      <description>简介 Maven Document 概念讲述 什么是SNAPSHOT 有的版本号当中以SNAPSHOT为后缀，说明此版本为开发状态，不稳定； POM Profile 用户自己的设置: (%USER~HOME~%/.m2/settings.xml) 全局设置:</description>
    </item>
    
    <item>
      <title>MongoDB基础学习</title>
      <link>https://kedadiannao220.github.io/post/mongo/mongodb/</link>
      <pubDate>Wed, 27 Sep 2017 13:07:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/mongo/mongodb/</guid>
      <description>启动 mongodump -h localhost --username dbuser --password dbuser -o /tmp/mongodb-directory -d directory\_db\_dev mongorestore -d hf-cmdb0622-1 --drop --dir=/root/mongodb\_production-backup-file.201701192300/hf-cmdb/ mongo --username dbuser --password dbuser 基本命令 启动mongodb ： mongod &amp;ndash;dbpath /Users/admin/projects/mongodb/data/db 连接mongodb : mongo 数据类型 String Integer Boolean Double keys Arrays Timestamp Object Null Symbol Date Object ID Binary Data</description>
    </item>
    
    <item>
      <title>SpringBoot实战第7章--Actuator</title>
      <link>https://kedadiannao220.github.io/post/spring/springboot%E5%AE%9E%E6%88%98%E7%AC%AC7%E7%AB%A0--actuator/</link>
      <pubDate>Thu, 21 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/springboot%E5%AE%9E%E6%88%98%E7%AC%AC7%E7%AB%A0--actuator/</guid>
      <description>说明 SpringBoot实战第4章讲测试 SpringBoot实战第5章讲Groovy SpringBoot实战第6章讲Grails 由于在工作当</description>
    </item>
    
    <item>
      <title>SpringBoot实战第1章--入门</title>
      <link>https://kedadiannao220.github.io/post/spring/springboot%E5%AE%9E%E6%88%98%E7%AC%AC1%E7%AB%A0--%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 20 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/springboot%E5%AE%9E%E6%88%98%E7%AC%AC1%E7%AB%A0--%E5%85%A5%E9%97%A8/</guid>
      <description>前言 SpringBoot可以让Spring不再成为开发的绊脚石，轻量配置或者完全不需要配置 内容 Spring精要 自动配置：若配置了dataso</description>
    </item>
    
    <item>
      <title>SpringBoot实战第2章--自定义配置</title>
      <link>https://kedadiannao220.github.io/post/spring/springboot%E5%AE%9E%E6%88%98%E7%AC%AC2%E7%AB%A0--%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 20 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/springboot%E5%AE%9E%E6%88%98%E7%AC%AC2%E7%AB%A0--%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/</guid>
      <description>注解 属性文件外置配置 要想使用属性文件外置配置，根据 Generating your own meta-data using the annotation processor 需要配置spring-boot-configuration-process</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第12章--远程服务</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC12%E7%AB%A0--%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 20 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC12%E7%AB%A0--%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1/</guid>
      <description>目前调用远程接口可以使用一些RPC框架，或者使用Spring Template；或Web Service等</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第13章--Spring消息</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC13%E7%AB%A0--spring%E6%B6%88%E6%81%AF/</link>
      <pubDate>Wed, 20 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC13%E7%AB%A0--spring%E6%B6%88%E6%81%AF/</guid>
      <description>Spring与ActiveMQ的集成：ActiveMQ</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第10章--事务</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC10%E7%AB%A0--%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 18 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC10%E7%AB%A0--%E4%BA%8B%E5%8A%A1/</guid>
      <description>前言 以JDBC的形式操作数据库，需要控制获得连接、关闭连接、事务提交、回滚等操作，而Spring的声明式事务处理可以从复杂的事务处理中脱离出</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第11章--Spring MVC</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC11%E7%AB%A0--spring-mvc/</link>
      <pubDate>Mon, 18 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC11%E7%AB%A0--spring-mvc/</guid>
      <description>说明，由于目前使用SpringBoot，并且使用Restful对API进行管理；所以Spring MVC的思想继续保持延续，但代码一般不怎么写</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第8章--数据库连接JDBC</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC8%E7%AB%A0--%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5jdbc/</link>
      <pubDate>Tue, 12 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC8%E7%AB%A0--%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5jdbc/</guid>
      <description>前言 什么是JDBC（Java DataBase Connectivity Java数据库连接） 怎么使用JDBC？ 引入数据库驱动jar包 Java在程序当中加载驱动Class.forNa</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第9章--MyBatis整合</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC9%E7%AB%A0--mybatis%E6%95%B4%E5%90%88/</link>
      <pubDate>Tue, 12 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC9%E7%AB%A0--mybatis%E6%95%B4%E5%90%88/</guid>
      <description>前言 MyBatis 之前叫iBatis，是Apache的一个开源项目，后来迁移到了Google Code当中，改名为MyBatis 官网介绍如下：MyBati</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第7章--AOP</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC7%E7%AB%A0--aop/</link>
      <pubDate>Mon, 04 Sep 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC7%E7%AB%A0--aop/</guid>
      <description>前言 什么是AOP？为什么要玩AOP AOP是Aspect Oriented Programming，意即面向切面编程 面向对向编程是竖向的方式；无法对多个对象进行</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第6章--容器的功能扩展</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC6%E7%AB%A0--%E5%AE%B9%E5%99%A8%E7%9A%84%E5%8A%9F%E8%83%BD%E6%89%A9%E5%B1%95/</link>
      <pubDate>Tue, 29 Aug 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC6%E7%AB%A0--%E5%AE%B9%E5%99%A8%E7%9A%84%E5%8A%9F%E8%83%BD%E6%89%A9%E5%B1%95/</guid>
      <description>概述 spring不仅仅提供了xmlBeanFactory，还提供了ApplictionContext用于扩展BeanFactory当中的功能</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第4章--自定义标签解析</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC4%E7%AB%A0--%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 21 Aug 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC4%E7%AB%A0--%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE%E8%A7%A3%E6%9E%90/</guid>
      <description>4.1 自定义标签的使用 为了方便非标准的spring bean配置，spring提供了自定义标签的功能 原理为使用spring提供AbstractBe</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第5章--bean的加载</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC5%E7%AB%A0--bean%E7%9A%84%E5%8A%A0%E8%BD%BD/</link>
      <pubDate>Mon, 21 Aug 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC5%E7%AB%A0--bean%E7%9A%84%E5%8A%A0%E8%BD%BD/</guid>
      <description>5.1 FactoryBean的使用 /*** AbstractBeanFactory.doGetBean方法加载bean **/ protected &amp;lt;T&amp;gt; T doGetBean(final String name, @Nullable final Class&amp;lt;T&amp;gt; requiredType, @Nullable final Object[] args, boolean typeCheckOnly)</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第3章--默认标签的解析</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC3%E7%AB%A0-%E9%BB%98%E8%AE%A4%E6%A0%87%E7%AD%BE%E7%9A%84%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Tue, 15 Aug 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC3%E7%AB%A0-%E9%BB%98%E8%AE%A4%E6%A0%87%E7%AD%BE%E7%9A%84%E8%A7%A3%E6%9E%90/</guid>
      <description>3.1 bean标签的解析及注册 DefaultBeanDefinitionDocumentReader.parseDefaultElement:解</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第1章--整体架构和环境搭建</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC1%E7%AB%A0--%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Thu, 03 Aug 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC1%E7%AB%A0--%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>学习说明 在看到第五章的时候有以下心得 看源码是一个枯燥的过程，因为你并没有参与到实际的开发和设计当中，所以有一些命名和思路不会非常明确，并且写</description>
    </item>
    
    <item>
      <title>Spring源码深度解析第2章--容器的基本实现</title>
      <link>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC2%E7%AB%A0--%E5%AE%B9%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 03 Aug 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring%E6%BA%90%E7%A0%81/spring%E6%BA%90%E7%A0%81%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E7%AC%AC2%E7%AB%A0--%E5%AE%B9%E5%99%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0/</guid>
      <description>2.3 最简单的例子 public class MyTestBean { private String testStr = &amp;quot;testStr&amp;quot;; public String getTestStr() { return this.testStr; } public void setTestStr(String str) { this.testStr = str; } } &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt; &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd&amp;quot;&amp;gt; &amp;lt;bean id=&amp;quot;myTestBean&amp;quot; class=&amp;quot;com.spring.MyTestBean&amp;quot;/&amp;gt; &amp;lt;/beans&amp;gt; public class TestClass { @Test public void test() throws IOException { // ClassPathResource Resource res = new ClassPathResource(&amp;quot;beanFactory.xml&amp;quot;); BeanFactory beanFactory = new XBeanXmlBeanFactory(res); MyTestBean</description>
    </item>
    
    <item>
      <title>ActiveMQ Queue Model</title>
      <link>https://kedadiannao220.github.io/post/activemq--queue/</link>
      <pubDate>Tue, 01 Aug 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/activemq--queue/</guid>
      <description>ActiveMQ是干什么的？ Apache ActiveMQ 是一个开源的消息集成服务 支持多语言，支持JMS1.1 J2EE1.4 首先需要了解什么是JMS和JMS相关的API：Java</description>
    </item>
    
    <item>
      <title>Python学习</title>
      <link>https://kedadiannao220.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 20 Jul 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>基础 语法 and : &amp;amp;&amp;amp; or : || elif : if else if、for后面是: if ~name~_ == &amp;lsquo;~main~_&amp;lsquo;: main方法，方法的入口 str(10) : 将int转换为str int(&amp;lsquo;1&amp;rsquo;): 将str转换为int 2 Using the Python Interpreter py</description>
    </item>
    
    <item>
      <title>dubbo学习--环境搭建遇到的一些坑</title>
      <link>https://kedadiannao220.github.io/post/dubbo%E5%AD%A6%E4%B9%A0--%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</link>
      <pubDate>Thu, 20 Jul 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/dubbo%E5%AD%A6%E4%B9%A0--%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</guid>
      <description>前言 最近比较寂寞，想学dubbo，又不想按照官网那种方式进行配置，想集成于spring boot；所以上网找了一下有没有spring boot dubb</description>
    </item>
    
    <item>
      <title>深入理解Java虚拟机--第7章 虚拟机类加载机制</title>
      <link>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC7%E7%AB%A0-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 10 Jul 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC7%E7%AB%A0-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</guid>
      <description>第7章 虚拟机类加载机制 7.1 概述 jvm是怎么加载这些Class文件信息的？ Class文件进入jvm会发生什么变化？ jvm把类的数据从Class文</description>
    </item>
    
    <item>
      <title>深入理解Java虚拟机--第5章 调优案例分析与实战</title>
      <link>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC5%E7%AB%A0-%E8%B0%83%E4%BC%98%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E6%88%98/</link>
      <pubDate>Fri, 07 Jul 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC5%E7%AB%A0-%E8%B0%83%E4%BC%98%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E6%88%98/</guid>
      <description>第5章 调优案例分析与实战 5.1 概述 5.2 案例分析 5.2.1 高性能硬件上的程序部署策略 如何解决老年代太大? 重启或者定时触发Full GC 64位的JDK消耗的内存一</description>
    </item>
    
    <item>
      <title>深入理解Java虚拟机--第6章 类文件结构</title>
      <link>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC6%E7%AB%A0-%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 07 Jul 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC6%E7%AB%A0-%E7%B1%BB%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</guid>
      <description>第6章 类文件结构 6.1 概述 代码编译的结果从本地机器码转变为字节码，是存储格式发展的一小步，却是编程语言发展的一大步 二进制本地机器码不再是唯一的选</description>
    </item>
    
    <item>
      <title>读书列表</title>
      <link>https://kedadiannao220.github.io/post/readbooklist/</link>
      <pubDate>Thu, 06 Jul 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/readbooklist/</guid>
      <description>已读的书列表 说明 从17年开始记录自己读书列表 后续会出一些读书的心得体会 有一些书不会做笔记，只会略略看过 信仰 书名 开始时间 结束时间 作者 简介 圣经 17.04</description>
    </item>
    
    <item>
      <title>深入理解Java虚拟机--第4章 虚拟机性能监控与故障处理</title>
      <link>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC4%E7%AB%A0---%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%B8%8E%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 05 Jul 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC4%E7%AB%A0---%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E4%B8%8E%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
      <description>第4章 虚拟机性能监控与故障处理 4.1 概述 工具永远都是知识技能的一层包装 我的mac的jdk PATH为/Library/Java/JavaVirtu</description>
    </item>
    
    <item>
      <title>深入理解Java虚拟机--第2章 Java内存区域与内存溢出异常</title>
      <link>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E7%AB%A0---java%E5%86%85%E5%AD%98%E5%8C%BA%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Wed, 28 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E7%AB%A0---java%E5%86%85%E5%AD%98%E5%8C%BA%E4%B8%8E%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E5%BC%82%E5%B8%B8/</guid>
      <description>第2章 Java内存区域与内存溢出异常 2.1 概述 C语言的内存管理是由开发者自行操作的，所以当开发者经验不足的时候就会写出内存溢出的代码；而java</description>
    </item>
    
    <item>
      <title>深入理解Java虚拟机--第3章 垃圾收集器与内存分配策略</title>
      <link>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC3%E7%AB%A0---%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/</link>
      <pubDate>Wed, 28 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%AC%AC3%E7%AB%A0---%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E4%B8%8E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5/</guid>
      <description>第3章 垃圾收集器与内存分配策略 3.1 概述 Lisp语言是最早使用内存分配并GC的语言 因为垃圾收集成为了高并发的瓶颈，并且需要排查内存溢出等复杂问题</description>
    </item>
    
    <item>
      <title>Basic Java</title>
      <link>https://kedadiannao220.github.io/post/basicjava/</link>
      <pubDate>Thu, 22 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/basicjava/</guid>
      <description>一些颠覆认知的问题 Java的String地址是相等的 System.out.println(&amp;quot;a&amp;quot; == &amp;quot;a&amp;quot;); //true System.out.println(&amp;quot;a&amp;quot;.equals(&amp;quot;a&amp;quot;)); //true Integer的valueOf存在默认值-127~127的区间 Integer f1 = 100, f2 = 100,</description>
    </item>
    
    <item>
      <title>Docker学习</title>
      <link>https://kedadiannao220.github.io/post/docker/</link>
      <pubDate>Tue, 20 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/docker/</guid>
      <description>Get Started command docker &amp;ndash;version : docker版本 docker command &amp;ndash;help : 查看某个命令的帮助 docker-compose &amp;ndash;version : docker compose版本 docker-machine &amp;ndash;version: docker machine版本 docker version: 查看docker client和s</description>
    </item>
    
    <item>
      <title>Nginx学习</title>
      <link>https://kedadiannao220.github.io/post/nginx/</link>
      <pubDate>Thu, 15 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/nginx/</guid>
      <description>Mac下nginx命令 sudo brew install nginx: brew安装nginx /usr/local/etc/nginx/nginx.conf: nginx配置文件路径 sudo nginx：启动nginx sudo nginx -s stop: 停止nginx sudo nginx -s reload: 重启n</description>
    </item>
    
    <item>
      <title>Java核心技术卷二</title>
      <link>https://kedadiannao220.github.io/post/java/corejavaii/</link>
      <pubDate>Sat, 03 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/java/corejavaii/</guid>
      <description>Java核心技术卷二 第3章 网络编程 socket socket(String host,String port):获取一个套接字 socket.getInputStream(): 获取流的数据信息 socket.setTimeout(1000): 设置socket连接超时时间 socket.isConnect(): socket.shutdownOutPut(): 半关闭，客户端向服务器</description>
    </item>
    
    <item>
      <title>Curl学习</title>
      <link>https://kedadiannao220.github.io/post/curl/</link>
      <pubDate>Fri, 02 Jun 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/curl/</guid>
      <description>CURL概述 CURL(command line url viewer),是命令行工具，发出网络请求，得到并提取数据，显示在标准输出里面，支持多种协议 CURL命令 curl -o file url: 保存url</description>
    </item>
    
    <item>
      <title>Java核心技术卷一</title>
      <link>https://kedadiannao220.github.io/post/java/corejavai/</link>
      <pubDate>Tue, 23 May 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/java/corejavai/</guid>
      <description>Java核心技术&amp;ndash;卷I 第1章 Java程序设计概述 java发展史 1996年sun公司发布java 1.0版本 1998年在JavaOn</description>
    </item>
    
    <item>
      <title>linux命令学习</title>
      <link>https://kedadiannao220.github.io/post/linux-command/</link>
      <pubDate>Mon, 22 May 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/linux-command/</guid>
      <description>每天一个linux命令 文件及目录操作 ls ls -l:列表显示当前目录下的文件 ls -lu:根据文件名称正序排列文件 ls -lt:根据文件修改时间倒序排列 ls</description>
    </item>
    
    <item>
      <title>深入理解Java虚拟机--第1章 走近java</title>
      <link>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E7%AC%AC1%E7%AB%A0-%E8%B5%B0%E8%BF%91java/</link>
      <pubDate>Sun, 21 May 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jvm/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA-jvm%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E7%AC%AC1%E7%AB%A0-%E8%B5%B0%E8%BF%91java/</guid>
      <description>第1部分 走近Java 第1章 走近java JDK(java development kit)java开发工具，包括java程序设计语言，api类库，Java虚拟机 JRE(java runtime environm</description>
    </item>
    
    <item>
      <title>Redis学习</title>
      <link>https://kedadiannao220.github.io/post/redis/</link>
      <pubDate>Wed, 10 May 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/redis/</guid>
      <description>Redis学习笔记 redis-cli del &amp;lsquo;LOGIN~ERRORLIMIT~:zhangbo&amp;rsquo;</description>
    </item>
    
    <item>
      <title>MySql日常杂学</title>
      <link>https://kedadiannao220.github.io/post/mysql/</link>
      <pubDate>Thu, 27 Apr 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/mysql/</guid>
      <description>MySql日常杂学 启动相关 /etc/init.d/mysqld start /etc/init.d/mysqld stop /etc/init.d/mysqld restart service mysqld restart service mysqld stop service mysqld start 其他命令 mysql -uroot -pP@ssw0rd -h55.6.8.142 hf-csa --default-character-set=utf8 mysql -uoot -pP@ssw0rd hf-csa -default-character-set=utf8 &amp;lt; db_qdn672.sql mysqldump --opt --protocol=TCP --user=&#39;root&#39; --password=&#39;P@ssw0rd&#39; --host=&#39;55.6.8.142&#39; -all-databases --result-file=&#39;20170619.sql&#39; mysqldump --opt --protocol=TCP --user=&#39;root&#39; --password=&#39;P@ssw0rd&#39; --host=&#39;55.6.8.142&#39; hf-csa --result-file=&#39;20170619.sql&#39; Index SHOW INDEX FROM SRV~INFO~; &amp;ndash; 查看表</description>
    </item>
    
    <item>
      <title>Spring-RestTemplate</title>
      <link>https://kedadiannao220.github.io/post/spring/spring-resttemplate/</link>
      <pubDate>Thu, 27 Apr 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring-resttemplate/</guid>
      <description>解决中文乱码的问题和Delete无法传入body的问题 问题说明：RestTemplate中文乱码问题； 回复里面有我的评论，以下为解决方法 package com.idcos.cloudres.biz.common.util;</description>
    </item>
    
    <item>
      <title>Spring-SpringBoot</title>
      <link>https://kedadiannao220.github.io/post/spring/spring-springboot/</link>
      <pubDate>Thu, 27 Apr 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/spring/spring-springboot/</guid>
      <description>Spring 1.5.x当中的hibrenate名称转换策略 今天将Spring从1.3.2升级到1.5.x当中，发现所有的查询都会有异常信息，异常信息为</description>
    </item>
    
    <item>
      <title>Awk学习</title>
      <link>https://kedadiannao220.github.io/post/linux-awk/</link>
      <pubDate>Sat, 22 Apr 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/linux-awk/</guid>
      <description>常用Command find awk 语法 usage: awk [-F fs] [-v var=value] [-f progfile | &#39;prog&#39;] [file ...] -F: 指定分隔域的标识 -v: 指定命令/参数值 -f: 指定需要解析的文件 Demo awk -F &#39;:&#39; &#39;{print $1}&#39; /etc/passwd ##输入/etc/p</description>
    </item>
    
    <item>
      <title>JWT学习</title>
      <link>https://kedadiannao220.github.io/post/jwt/</link>
      <pubDate>Sat, 22 Apr 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/jwt/</guid>
      <description>什么是JWT? jwt的全称是JSON Web Token；JSON Web Token是一个开源标准(rfc7519) ，是一个轻量，携带着用户信息的json</description>
    </item>
    
    <item>
      <title>Java多线程学习</title>
      <link>https://kedadiannao220.github.io/post/mulithread/</link>
      <pubDate>Sat, 22 Apr 2017 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/mulithread/</guid>
      <description>Java多线程 第一章 多线程技能 线程与进程的区别 一个进程的启动是由多个线程所支持的；windows进程管理器当中的第一项都一个进程，每一个进程</description>
    </item>
    
    <item>
      <title>Git学习</title>
      <link>https://kedadiannao220.github.io/post/git/</link>
      <pubDate>Wed, 27 Apr 2016 23:36:24 +0800</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/git/</guid>
      <description>GIT命令 git clone: git clone -b develop &amp;ndash;single-branch &amp;lt;git-address&amp;gt; :从git地址当中clone 指定的develop分支/或者在git repository当中指定此项目的默认bran</description>
    </item>
    
    <item>
      <title></title>
      <link>https://kedadiannao220.github.io/post/neo4j-ogm%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kedadiannao220.github.io/post/neo4j-ogm%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>判断NODE是否发生变化
 /** * Creates a new node or updates an existing one in the graph, if it has changed. * * @param entity the domain object to be persisted * @param context the current {@link CompileContext} * @param nodeBuilder a {@link NodeBuilder} that knows how to compile node create/update cypher phrases */ private void updateNode(Object entity, CompileContext context, NodeBuilder nodeBuilder) { // fire pre-save event here if (mappingContext.isDirty(entity)) { logger.</description>
    </item>
    
  </channel>
</rss>