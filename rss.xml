<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>org-page</title>
    <link>http://127.0.0.1</link>
    <description>static site generator</description>
    <pubDate>Tue, 30 Aug 2016 00:15:05 CST</pubDate>
    <lastBuildDate>Tue, 30 Aug 2016 00:15:05 CST</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>Effect Java笔记 </title>
      <link>http://127.0.0.1/blog/2016/08/16/effect-java笔记-/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>Effect Java笔记 </h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline4" class="outline-2">
<h2 id="orgheadline4">第2章 对象的销毁和创建</h2>
<div class="outline-text-2" id="text-orgheadline4">
</div><div id="outline-container-orgheadline1" class="outline-3">
<h3 id="orgheadline1">私有构造方法来强化单例属性</h3>
<div class="outline-text-3" id="text-orgheadline1">
<p>
单例的三种实现方法
</p>
<div class="org-src-container">

<pre class="src src-java">public class Elvis{
  public static final Elvis INSTANCE = new Elvis();
}
</pre>
</div>

<div class="org-src-container">

<pre class="src src-java">public class Elvis{
  public static final Evlis INSTANCE = new Elvis();

  public static Elvis getInstance(){
     return INSTANCE;
  }
}
</pre>
</div>

<div class="org-src-container">

<pre class="src src-java">public enum Elvis{
  INSTANCE;
}
</pre>
</div>
</div>
</div>

<div id="outline-container-orgheadline2" class="outline-3">
<h3 id="orgheadline2">私有构造方法强化不可实例化的能力</h3>
<div class="outline-text-3" id="text-orgheadline2">
<p>
在某些类当中，比如工具类，常量类，是不希望被实例化的。但是在没有构造方法的情况下，会调用默认的无参的构造方法。如果我们创建一个私有的构造方法，则编译器就不会实例化一个无参的构造方法。
</p>
</div>
</div>
<div id="outline-container-orgheadline3" class="outline-3">
<h3 id="orgheadline3">避免创建不必要的对象</h3>
<div class="outline-text-3" id="text-orgheadline3">
<div class="org-src-container">

<pre class="src src-java">String s = new String("hello");
String s = "hello";
</pre>
</div>
<p>
以上的代码在每次执行的时候都会创建一个新的对象。
</p>

<ol class="org-ol">
<li><p>
对于同时提供了静态方法和构造方法的不可变类，静态方法的使用要优于构造方法
</p>
<div class="org-src-container">

<pre class="src src-java">Boolean.valueOf("true");
Boolean("true");
</pre>
</div></li>
<li>我们可以在将一些变量声明于类或方法的抬头，防止多次实例化</li>
<li></li>
</ol>
</div>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-08-29</pubDate>
      <guid>http://127.0.0.1/blog/2016/08/16/effect-java笔记-/</guid>
    </item>
    <item>
      <title>马太福音</title>
      <link>http://127.0.0.1/blog/2016/06/22/马太福音/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>马太福音</h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1">背景</h2>
<div class="outline-text-2" id="text-orgheadline1">
<ul class="org-ul">
<li>马太福音是马太所写</li>
<li>因主后70年，耶路撒冷圣殿被罗马兵丁所拆，而书中又记载着圣殿被拆的预言，所以写作时间不晚于主后70年。</li>
<li>马太在本书当中引入了大量的旧约经文，共计50处（按次数统计）；可见一个主耶稣拣选的人，培养出来之后能够熟悉旧约，将旧约当中的圣经引用的非常熟悉。</li>
</ul>
</div>
</div>
<div id="outline-container-orgheadline2" class="outline-2">
<h2 id="orgheadline2">分段考虑</h2>
</div>
<div id="outline-container-orgheadline11" class="outline-2">
<h2 id="orgheadline11">第一章</h2>
<div class="outline-text-2" id="text-orgheadline11">
</div><div id="outline-container-orgheadline8" class="outline-3">
<h3 id="orgheadline8">三位外邦女子</h3>
<div class="outline-text-3" id="text-orgheadline8">
</div><div id="outline-container-orgheadline3" class="outline-4">
<h4 id="orgheadline3">他玛</h4>
<div class="outline-text-4" id="text-orgheadline3">
<ul class="org-ul">
<li>她本是犹大的儿媳妇，我相信她是因着想进入犹太人的族谱当中，才采取那样的方式与犹大同房。</li>
<li>但大卫却是从犹大而来，基督也是从他而来。因着玛利亚生了耶稣，万代要称她有福（路1：48）。可想他玛的福份是何等的大。</li>
<li>另外一方面也看到神是何等的怜恤罪人，她与犹大犯了乱伦的罪，神却没有灭绝，反而更加的赐福。我相信犹大与他玛肯定有认罪悔改。因为我们若认自己的罪，神必会赦免。</li>
</ul>
</div>
</div>
<div id="outline-container-orgheadline4" class="outline-4">
<h4 id="orgheadline4">喇合：</h4>
<div class="outline-text-4" id="text-orgheadline4">
<ul class="org-ul">
<li>耶利哥人</li>
<li>妓女</li>
<li>因着接待探子，明白神的旨意，蒙恩得救，得着那朱红色线做为家的得救记号。</li>
</ul>
</div>
</div>
<div id="outline-container-orgheadline5" class="outline-4">
<h4 id="orgheadline5">路得</h4>
<div class="outline-text-4" id="text-orgheadline5">
<ul class="org-ul">
<li>摩押人：外邦人，被神所咒诅的族类，世代都不容许进入神的会；</li>
<li>决志跟随婆婆（圣灵）的人；</li>
</ul>
</div>
</div>
<div id="outline-container-orgheadline6" class="outline-4">
<h4 id="orgheadline6">拔示巴（非外邦女子）</h4>
<div class="outline-text-4" id="text-orgheadline6">
<ul class="org-ul">
<li>美丽，却又不太检点（开着窗户洗澡，让大卫看到）</li>
<li>自己丈夫是一个非常爱国的人，自己却没有做一个好的帮手</li>
</ul>
</div>
<ul class="org-ul"><li><a id="orgheadline7"></a>关于拔示巴的一些查考<br  /><div class="outline-text-5" id="text-orgheadline7">
<ul class="org-ul">
<li>拔示巴是以连的女儿，赫人乌利亚的妻子：撒下11：3</li>
<li>以连是基罗人亚希多弗的儿子：撒下23：34</li>
<li>基罗是犹大支派的一个产业：书15：51</li>
<li>以连与乌利亚都是王的勇士：王下23：34，39</li>
</ul>

<p>
而乌利亚与以连都是大卫的勇士，乌利亚住的地方离王宫不太远，因为大卫可以在王宫可以看到他的家；亚希多弗呢又是侍奉王的，老家基罗离耶路撒冷又有几英里远（资料查考），侍奉王不太方便；以连与乌利亚都是勇士，又是岳父与女婿的关系；所以他们很可能在一起住，就在乌利亚的家里；亚希多弗看着自己的孙女婿被大卫用这样的诡计害了，肯定心里有一些不快；一家人多快乐啊，在一起，儿子与孙女婿都那么有出息，又是侍奉王的家庭，自己也侍奉王，多么荣耀，结果被大卫给毁坏了。所以参与了押沙龙的叛变。
</p>
</div></li></ul>
</div>
</div>
<div id="outline-container-orgheadline9" class="outline-3">
<h3 id="orgheadline9">家谱当中的14-14代</h3>
<div class="outline-text-3" id="text-orgheadline9">
<p>
画出familyTree，查考家谱人员的关系
需要认真地去查考家谱，因为里面并不止28代，因为里面有一些人物不合神的心意没有列在家谱当中。
</p>
</div>
</div>
<div id="outline-container-orgheadline10" class="outline-3">
<h3 id="orgheadline10">为什么不从亚当开始计算？</h3>
<div class="outline-text-3" id="text-orgheadline10">
<ul class="org-ul">
<li>个人理解，从君王的生命开始算起。</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgheadline13" class="outline-2">
<h2 id="orgheadline13">第二章</h2>
<div class="outline-text-2" id="text-orgheadline13">
</div><div id="outline-container-orgheadline12" class="outline-3">
<h3 id="orgheadline12">约瑟的三就一便</h3>
<div class="outline-text-3" id="text-orgheadline12">
<ul class="org-ul">
<li>【1：24】就遵着主使者的吩咐，把妻子娶过来</li>
<li>【1：14】就起来，夜间带着小孩子和他母亲往埃及去</li>
<li>【1：21】就起来，把小孩子和他母亲带到以色列地去</li>
<li>【1：22】便往加利利境内去了</li>
</ul>
</div>
</div>
</div>
<div id="outline-container-orgheadline14" class="outline-2">
<h2 id="orgheadline14">第三章</h2>
</div>
<div id="outline-container-orgheadline15" class="outline-2">
<h2 id="orgheadline15">第四章</h2>
<div class="outline-text-2" id="text-orgheadline15">
<ul class="org-ul">
<li>17节：【从那时候，耶稣就传起道来&#x2026;.】耶稣先经过了约翰的洗礼，经过旷野的试探，而后开始传道</li>
</ul>
</div>
</div>
<div id="outline-container-orgheadline16" class="outline-2">
<h2 id="orgheadline16">第廿四章</h2>
</div>
<div id="outline-container-orgheadline18" class="outline-2">
<h2 id="orgheadline18">第廿五章</h2>
<div class="outline-text-2" id="text-orgheadline18">
</div><div id="outline-container-orgheadline17" class="outline-3">
<h3 id="orgheadline17">几个对比</h3>
<div class="outline-text-3" id="text-orgheadline17">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left">绵羊</td>
<td class="org-left">山羊</td>
</tr>

<tr>
<td class="org-left">右边</td>
<td class="org-left">左边</td>
</tr>

<tr>
<td class="org-left">赞赏</td>
<td class="org-left">批评</td>
</tr>

<tr>
<td class="org-left">义人</td>
<td class="org-left">不义</td>
</tr>

<tr>
<td class="org-left">永刑</td>
<td class="org-left">永生</td>
</tr>

<tr>
<td class="org-left">蒙福</td>
<td class="org-left">咒诅</td>
</tr>

<tr>
<td class="org-left">可来</td>
<td class="org-left">离开</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>

<div id="outline-container-orgheadline23" class="outline-2">
<h2 id="orgheadline23">天国不配的人</h2>
<div class="outline-text-2" id="text-orgheadline23">
</div><div id="outline-container-orgheadline19" class="outline-3">
<h3 id="orgheadline19">没有礼服的宾客【22章1-14】</h3>
</div>
<div id="outline-container-orgheadline20" class="outline-3">
<h3 id="orgheadline20">又懒又恶的仆人【24章45-51】</h3>
</div>
<div id="outline-container-orgheadline21" class="outline-3">
<h3 id="orgheadline21">没有灯油的童女【25章1-13】</h3>
</div>
<div id="outline-container-orgheadline22" class="outline-3">
<h3 id="orgheadline22">没有才干的仆人【25章14-30】</h3>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-08-26</pubDate>
      <guid>http://127.0.0.1/blog/2016/06/22/马太福音/</guid>
    </item>
    <item>
      <title>Spacemacs </title>
      <link>http://127.0.0.1/blog/2016/07/30/spacemacs-/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>Spacemacs </h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1">如何修改spacemacs当中的换行</h2>
<div class="outline-text-2" id="text-orgheadline1">
<p>
spacemacs配置了truncate-lines的功能，SPC+t+l即可打开/关闭truncate-lines
enable是打开，当字段过长时，不会被截取。
disable是关闭，当字段过长时，会自动被截取，换行处理。
</p>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-07-30</pubDate>
      <guid>http://127.0.0.1/blog/2016/07/30/spacemacs-/</guid>
    </item>
    <item>
      <title>保罗传道旅程 </title>
      <link>http://127.0.0.1/blog/2016/07/17/保罗传道旅程-/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>保罗传道旅程 </h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1">第一次传道旅程</h2>
<div class="outline-text-2" id="text-orgheadline1">
<ul class="org-ul">
<li>经文：徒13：2节</li>
<li>人物：保罗，巴拿巴</li>
<li>出发地：叙利亚-安提阿（徒13：1）</li>
</ul>
</div>
<div id="outline-container-orgheadline2" class="outline-3">
<h3 id="orgheadline2">路程</h3>
<div class="outline-text-3" id="text-orgheadline2">
<ol class="org-ol">
<li>塞浦路斯-撒拉米：【徒13：4-5】</li>
<li>塞浦路斯-帕弗：【徒13：6-12】</li>
<li>旁非利亚-别加：【徒13：13-13】
<ul class="org-ul">
<li>此处马可离开了他们（徒15：38）</li>
</ul></li>
<li>彼西底-安提阿：【徒13：14-50】</li>
<li>以哥念：【徒13：51-14：5】</li>
<li>吕高尼-路司得：【徒14：6】</li>
<li>吕高尼-特庇：【徒14：6】</li>
<li>路司得：【徒14：21】</li>
<li>以哥念：【徒14：21】</li>
<li>安提阿：【徒14：21】</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-orgheadline3" class="outline-2">
<h2 id="orgheadline3">第二次传道旅程</h2>
<div class="outline-text-2" id="text-orgheadline3">
<ul class="org-ul">
<li>经文：徒15：40</li>
<li>人物：保罗、细拉</li>
<li>出发地：叙利亚-安提阿（徒15：35）</li>
</ul>
</div>
<div id="outline-container-orgheadline4" class="outline-3">
<h3 id="orgheadline4">路程</h3>
<div class="outline-text-3" id="text-orgheadline4">
<ol class="org-ol">
<li>特庇【徒16：1】</li>
<li>路司得【徒16：1】</li>
<li>以哥念【徒16：2，16：5】
<ul class="org-ul">
<li>此处应该带上了提摩太【徒17：14】</li>
</ul></li>
<li>弗吕家【徒16：6】
<ul class="org-ul">
<li>圣灵禁止他们去亚细亚</li>
</ul></li>
<li>加拉太【徒16：6】</li>
<li>每西亚【徒16：7】</li>
<li>特罗亚【徒16：8】</li>
<li>撒摩特喇【徒16：11】
<ul class="org-ul">
<li>圣经里面记载着行船，没有进入此城</li>
</ul></li>
<li>尼亚波利【徒16：11】</li>
<li>腓立比【徒16：12】
<ul class="org-ul">
<li>马其顿的第一个城，罗马的驻防城</li>
</ul></li>
<li>暗妃波里【徒17：1】</li>
<li>亚波罗尼亚【徒17：1】</li>
<li>帖撒罗尼迦【徒17：1】</li>
<li>庇哩亚【徒17：10】
<ul class="org-ul">
<li>西拉与提摩太留在庇哩亚，完成未完成的工作</li>
<li>弟兄们送保罗到雅典</li>
</ul></li>
<li>雅典【徒17：15】</li>
<li>哥林多【徒18：1】
<ul class="org-ul">
<li>在哥林多呆了1年6个月【徒18：11】</li>
</ul></li>
<li>坚革哩【徒18：18】
<ul class="org-ul">
<li>此时百基拉与亚居拉同去</li>
</ul></li>
<li>以弗所【徒18：19】
<ul class="org-ul">
<li>百基拉与亚居拉在以弗所</li>
<li>保罗去凯撒利亚</li>
</ul></li>
<li>凯撒利亚【徒18：22】</li>
<li>耶路撒冷【徒18：22】</li>
</ol>
</div>
</div>
</div>
<div id="outline-container-orgheadline5" class="outline-2">
<h2 id="orgheadline5">第三次传道旅程</h2>
<div class="outline-text-2" id="text-orgheadline5">
<ol class="org-ol">
<li>安提阿【徒18：22】</li>
<li>加拉太【徒18：23】</li>
<li>弗吕家【徒18：23】</li>
<li>以弗所【徒19：1】
<ul class="org-ul">
<li>在此处呆了两年之久</li>
<li>先打发提摩太、以拉都去马其顿，自己在亚细亚</li>
</ul></li>
<li>马其顿【徒19：21】</li>
<li>亚该亚【徒19：21】</li>
<li>希腊【徒20：2】
<ul class="org-ul">
<li>在此处住了三个月</li>
</ul></li>
<li>亚细亚【徒20：4】
<ul class="org-ul">
<li>所马特、亚里达古、西公都、该犹、提摩太、推基古、特罗非摩</li>
</ul></li>
<li>腓立比【徒20：6】</li>
<li>特罗亚【徒20：6】</li>
<li>亚朔【徒20：13】</li>
<li>米推利尼【徒20：14】</li>
<li>基阿对面【徒20：15】</li>
<li>撒摩【徒20：15】</li>
<li>米利都【徒20：15】</li>
<li>哥士【徒21：1】</li>
<li>罗底【徒21：1】</li>
<li>帕大喇【徒21：1】</li>
<li>腓尼基【徒21：2】</li>
<li>推罗【徒21：3】</li>
<li>多利买【徒21：7】</li>
<li>凯撒利亚【徒21：8】</li>
<li>耶路撒冷【徒21：16】</li>
</ol>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-07-17</pubDate>
      <guid>http://127.0.0.1/blog/2016/07/17/保罗传道旅程-/</guid>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://127.0.0.1/blog/2016/08/30/untitled/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>Untitled</h1>
            </header>
            <br />
            <section id="post-body">
                <p>
拔示巴是否为外邦人：
<a href="https://3amthoughts.com/article/people-and-places/ahithophel">https://3amthoughts.com/article/people-and-places/ahithophel</a>
</p>

<p>
这一家比较有意思哈，分享一下：
</p>

<ul class="org-ul">
<li>拔示马是以连的女儿，赫人乌利亚的妻子：撒下11：3</li>
<li>以连是基罗人亚希多弗的儿子：撒下23：34</li>
<li>基罗是犹大支派的一个产业：书15：51</li>
</ul>

<p>
而乌利亚与以连都是大卫的勇士，乌利亚住的地方离王宫不太远，因为大卫可以在王宫可以看到他的家；亚希多弗呢又是侍奉王的，老家基罗离耶路撒冷又有几英里远（资料查考），侍奉王不太方便；以连与乌利亚都是勇士，又是岳父与女婿的关系；所以他们很可能在一起住，就在乌利亚的家里；
亚希多弗看着自己的孙女婿被大卫用这样的诡计害了，肯定心里有一些不快；一家人多快乐啊，在一起，儿子与孙女婿都那么有出息，又是侍奉王的家庭，自己也侍奉王，多么荣耀，结果被大卫给毁坏了。
</p>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-07-09</pubDate>
      <guid>http://127.0.0.1/blog/2016/08/30/untitled/</guid>
    </item>
    <item>
      <title>mysql笔记</title>
      <link>http://127.0.0.1/blog/2016/06/15/mysql笔记/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>mysql笔记</h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline13" class="outline-2">
<h2 id="orgheadline13">MySql学习</h2>
<div class="outline-text-2" id="text-orgheadline13">
</div><div id="outline-container-orgheadline1" class="outline-3">
<h3 id="orgheadline1">启动相关</h3>
<div class="outline-text-3" id="text-orgheadline1">
<div class="org-src-container">

<pre class="src src-shell">/etc/init.d/mysqld start
/etc/init.d/mysqld stop
/etc/init.d/mysqld restart

service mysqld restart
service mysqld stop
service mysqld start
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline2" class="outline-3">
<h3 id="orgheadline2">其他</h3>
</div>
<div id="outline-container-orgheadline9" class="outline-3">
<h3 id="orgheadline9">Mysql Dump</h3>
<div class="outline-text-3" id="text-orgheadline9">
</div><div id="outline-container-orgheadline3" class="outline-4">
<h4 id="orgheadline3">dump数据库</h4>
<div class="outline-text-4" id="text-orgheadline3">
<div class="org-src-container">

<pre class="src src-shell">mysqldump -uroot -p hf-csa &gt; hf-csa.sql
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline4" class="outline-4">
<h4 id="orgheadline4">只dump数据库表结构（&#x2013;no-data -d）</h4>
<div class="outline-text-4" id="text-orgheadline4">
<div class="org-src-container">

<pre class="src src-shell">mysqldump -uroot -p --no-data --add-drop-table hf-csa &gt; hf-csa.sql
mysqldump -uroot -p -d --add-drop-table hf-csa &gt; hf-csa.sql
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline5" class="outline-4">
<h4 id="orgheadline5">dump数据库表结构排除某些表</h4>
<div class="outline-text-4" id="text-orgheadline5">
<div class="org-src-container">

<pre class="src src-shell">mysqldump -uroot -p --no-data --add-drop-table hf-csa --ignore-table=hf-csa.ACT_GET_PROPERTY &gt; hf-csa.sql
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline6" class="outline-4">
<h4 id="orgheadline6">dump数据库某张表，表中间以空格分隔</h4>
<div class="outline-text-4" id="text-orgheadline6">
<div class="org-src-container">

<pre class="src src-shell">mysqldump -uroot -p --no-data hf-csa SRV_INFO SRV_BP_APP_INFO &gt; hf-csa.sql
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline7" class="outline-4">
<h4 id="orgheadline7">dump数据库带注释的表结构</h4>
<div class="outline-text-4" id="text-orgheadline7">
<div class="org-src-container">

<pre class="src src-shell">mysqldump -uroot -p --no-data --comments hf-csa SRV_INFO SRV_BP_APP_INFO &gt; hf-csa.sql
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline8" class="outline-4">
<h4 id="orgheadline8">reload dump File</h4>
<div class="outline-text-4" id="text-orgheadline8">
<div class="org-src-container">

<pre class="src src-shell">shell&gt; mysql hf-csa &lt; hf-csa.sql
shell&gt; mysql -e "source hf-csa.sql" hf-csa
mysql&gt; source hf-csa.sql
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgheadline10" class="outline-3">
<h3 id="orgheadline10">INFOMATION_SCHEMA</h3>
<div class="outline-text-3" id="text-orgheadline10">
<div class="org-src-container">

<pre class="src src-sql">SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'hf-csa'; // 查询hf-csa下所有表的列
SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'hf-csa'; // 查询hf-csa下所有的表
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline12" class="outline-3">
<h3 id="orgheadline12">语法相关</h3>
<div class="outline-text-3" id="text-orgheadline12">
</div><div id="outline-container-orgheadline11" class="outline-4">
<h4 id="orgheadline11">LEFT JOIN，RIGHT JOIN,  INNER JOIN</h4>
<div class="outline-text-4" id="text-orgheadline11">
<ul class="org-ul">
<li>LEFT JOIN：以左边的表为基准显示查询结果</li>
<li>RIGHT JOIN：以右边的表为基准显示查询结果</li>
<li>INNER JOIN：只显示符合条件的查询结果</li>
</ul>
<div class="org-src-container">

<pre class="src src-shell">SELECT ip.IP_ADDRESS,ip.ID,unit.NAME FROM SRV_BP_DEV_IP ip LEFT JOIN SRV_BP_DEV dev ON ip.SRV_BP_DEV_ID = dev.ID
  LEFT JOIN SRV_BP_APP_DP_UNIT unit ON dev.SRV_BP_APP_DP_UNIT_ID = unit.ID WHERE
  ip.SRV_INFO_ID = dev.SRV_INFO_ID AND dev.SRV_INFO_ID = unit.SRV_INFO_ID AND ip.SRV_INFO_ID = '9ecbd34c-3ed6-4e61-8d11-0ba526e9ca98';
</pre>
</div>
</div>
</div>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-07-08</pubDate>
      <guid>http://127.0.0.1/blog/2016/06/15/mysql笔记/</guid>
    </item>
    <item>
      <title>Java基础</title>
      <link>http://127.0.0.1/blog/2016/06/26/java基础/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>Java基础</h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline2" class="outline-2">
<h2 id="orgheadline2">运算</h2>
<div class="outline-text-2" id="text-orgheadline2">
</div><div id="outline-container-orgheadline1" class="outline-3">
<h3 id="orgheadline1">移位运算</h3>
<div class="outline-text-3" id="text-orgheadline1">
<div class="org-src-container">

<pre class="src src-java">System.out.println(Integer.toBinaryString(1));
System.out.println(Integer.toBinaryString(1 &lt;&lt; 2));//左移去算 1的二进制后面补2个0
System.out.println(Integer.toBinaryString(1 &lt;&lt; 4));// 1的二进制后面补4个0
System.out.println(10 &gt;&gt; 2); //右移运算  10的二进制去掉最后两位
</pre>
</div>
</div>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-07-02</pubDate>
      <guid>http://127.0.0.1/blog/2016/06/26/java基础/</guid>
    </item>
    <item>
      <title>Linux笔记</title>
      <link>http://127.0.0.1/blog/2016/06/16/linux笔记/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>Linux笔记</h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1">VIM 笔记</h2>
</div>

<div id="outline-container-orgheadline7" class="outline-2">
<h2 id="orgheadline7">常用Command</h2>
<div class="outline-text-2" id="text-orgheadline7">
</div><div id="outline-container-orgheadline2" class="outline-3">
<h3 id="orgheadline2">find</h3>
</div>

<div id="outline-container-orgheadline5" class="outline-3">
<h3 id="orgheadline5">awk</h3>
<div class="outline-text-3" id="text-orgheadline5">
</div><div id="outline-container-orgheadline3" class="outline-4">
<h4 id="orgheadline3">语法</h4>
<div class="outline-text-4" id="text-orgheadline3">
<div class="org-src-container">

<pre class="src src-shell">usage: awk [-F fs] [-v var=value] [-f progfile | 'prog'] [file ...]
</pre>
</div>
<ul class="org-ul">
<li>-F: 指定分隔域的标识</li>
<li>-v: 指定命令/参数值</li>
<li>-f: 指定需要解析的文件</li>
</ul>
</div>
</div>
<div id="outline-container-orgheadline4" class="outline-4">
<h4 id="orgheadline4">Demo</h4>
<div class="outline-text-4" id="text-orgheadline4">
<div class="org-src-container">

<pre class="src src-shell">awk -F ':' '{print $1}' /etc/passwd                                                  ##输入/etc/passwd当中以:分隔的第一个域
awk -F ':' '{print $1 "\t" $2}' /etc/passwd                                          ##输入/etc/passwd当中以:分隔的第1，2两个域，注意$1与$2之间的字符串要添加""
awk '{count++} END {print count}' /etc/passwd                                        ##统计文件当中的行数
echo -e "A line 1n A line 2" | awk {print}                                           ##print不带参数的时候，默认打印整行 
echo -e "A line 1n A line 2" | awk -F 'n' '{print $1}'                               ##指定分隔符 'n',并打印第一个field 
echo -e "A line 1n A line 2" | awk  '{print $1}'                                     ## -F为空时，默认以空格分隔 
echo | awk '{ var1="hello"; var2="world"; print var1,var2}'                          ##在{}当中定义变量，变量声明之间用 ; 进行分隔
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgheadline6" class="outline-3">
<h3 id="orgheadline6"></h3>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-07-02</pubDate>
      <guid>http://127.0.0.1/blog/2016/06/16/linux笔记/</guid>
    </item>
    <item>
      <title>Spring boot Schedule Task </title>
      <link>http://127.0.0.1/blog/2016/06/11/spring-boot-schedule-task-/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>Spring boot Schedule Task </h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1">基础入门</h2>
<div class="outline-text-2" id="text-orgheadline1">
<p>
scheduled Task是定时任务，用于定时执行某段程序
</p>
</div>
<div id="outline-container-orgheadline2" class="outline-3">
<h3 id="orgheadline2">官方demo： <a href="https://spring.io/guides/gs/scheduling-tasks/">Scheduling Tasks</a></h3>
<div class="outline-text-3" id="text-orgheadline2">
<p>
需要注意的地方：
</p>
<ol class="org-ol">
<li>在Application.java当中配置@EnableScheduling</li>
<li>在方法当中配置@Scheduled</li>
<li>在方法所在的类当中配置component</li>
</ol>
</div>
</div>
<div id="outline-container-orgheadline10" class="outline-3">
<h3 id="orgheadline10">注解列表</h3>
<div class="outline-text-3" id="text-orgheadline10">
</div><div id="outline-container-orgheadline3" class="outline-4">
<h4 id="orgheadline3">@EnableScheduling</h4>
<div class="outline-text-4" id="text-orgheadline3">
<p>
设置在Application类当中，用于打开定时任务的开头
</p>
</div>
</div>
<div id="outline-container-orgheadline4" class="outline-4">
<h4 id="orgheadline4">@Scheduled</h4>
<div class="outline-text-4" id="text-orgheadline4">
<p>
定时任务的模式注解
</p>
</div>
<ul class="org-ul"><li><a id="orgheadline5"></a>cron<br  /><div class="outline-text-5" id="text-orgheadline5">
<ul class="org-ul">
<li>按照unix 平台的cron语法来设置定时任务执行的时间</li>
<li>参考man crontab</li>
</ul>
</div></li>
<li><a id="orgheadline6"></a>fixedDelay<br  /><div class="outline-text-5" id="text-orgheadline6">
<ul class="org-ul">
<li>在下一周期时间g到达时，当上一定时任务执行完之后，才执行此次的定时任务;</li>
<li>参数long类型，5000为5s；</li>
<li>fixedDelayString，接收String类型的日期</li>
</ul>
</div></li>
<li><a id="orgheadline7"></a>fixedRate<br  /><div class="outline-text-5" id="text-orgheadline7">
<ul class="org-ul">
<li>在下一周期时间到达时，当上一次定时任务未执行完，此次的定时任务也可以执行</li>
<li>参数同 fixedDelay</li>
</ul>
</div></li>
<li><a id="orgheadline8"></a>initialDelayString<br  /></li>
<li><a id="orgheadline9"></a>zone<br  /></li></ul>
</div>
</div>
<div id="outline-container-orgheadline17" class="outline-3">
<h3 id="orgheadline17">cron</h3>
<div class="outline-text-3" id="text-orgheadline17">
</div><div id="outline-container-orgheadline11" class="outline-4">
<h4 id="orgheadline11">cron学习</h4>
<div class="outline-text-4" id="text-orgheadline11">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">field</th>
<th scope="col" class="org-left">allowed value</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">second</td>
<td class="org-left">0-59 , - / *</td>
</tr>

<tr>
<td class="org-left">minute</td>
<td class="org-left">0-59 , - / *</td>
</tr>

<tr>
<td class="org-left">hour</td>
<td class="org-left">0-23 , - / *</td>
</tr>

<tr>
<td class="org-left">day of month</td>
<td class="org-left">1-31 , - / * ? L W C</td>
</tr>

<tr>
<td class="org-left">month</td>
<td class="org-left">1-12 JAN-DEC , - / *</td>
</tr>

<tr>
<td class="org-left">day of week</td>
<td class="org-left">1-7 SUN-SAT , - / * ? L C #</td>
</tr>

<tr>
<td class="org-left">year</td>
<td class="org-left">Null 1970-2099 , - / *</td>
</tr>
</tbody>
</table>

<ol class="org-ol">
<li>- 分隔起止时间值； eg: minute 5-20 ==&gt; 从5分钟~20分钟内，每分钟执行一次</li>
<li>/ 分隔开始时间和间隔时间； eg: minute 5/20  ==&gt; 5分钟开始执行，每隔20分钟执行一次</li>
<li>, 分隔指定时间值，表示枚举；eg minute 5,20  ==&gt; 5分钟和20分钟，每分钟执行一次</li>
<li>* 表示通配符； eg minute * ==&gt; 表示每分钟都执行</li>
<li>? 只能出现在dayOfMonth,dayOfWeek，匹配任意值</li>
<li>L last,最后一个值； dayOfMonth L ==&gt; 每个月的最后一天执行</li>
<li>W work，工作日执行；</li>
<li>C</li>
<li># 分隔，每个月的第几个周几，6#3，每个月的第三个周五</li>
</ol>
</div>

<ul class="org-ul"><li><a id="orgheadline12"></a>Demo列表<br  /><div class="outline-text-5" id="text-orgheadline12">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left">0 0/5 14,18 * * ?</td>
<td class="org-left">每天的14:00开始到14:55及每天的18:00开始到18:55，每5分钟执行</td>
</tr>

<tr>
<td class="org-left">0 0-5 14 * * ?</td>
<td class="org-left">每天的14:00~14：05，每分钟执行</td>
</tr>

<tr>
<td class="org-left">0 10,44 14 ? 3 WED</td>
<td class="org-left">3月的每周三的14:10,14:44每分钟执行</td>
</tr>

<tr>
<td class="org-left">0 15 10 ? * 6L</td>
<td class="org-left">每周五10：15，每分钟执行（6是周五，1是周日）</td>
</tr>

<tr>
<td class="org-left">0 15 10 ? * 6#3</td>
<td class="org-left">每个月的第3个周五的10:15执行</td>
</tr>

<tr>
<td class="org-left">&#xa0;</td>
<td class="org-left">&#xa0;</td>
</tr>
</tbody>
</table>
</div></li></ul>
</div>
<div id="outline-container-orgheadline15" class="outline-4">
<h4 id="orgheadline15">cron配置化</h4>
<div class="outline-text-4" id="text-orgheadline15">
</div><ul class="org-ul"><li><a id="orgheadline13"></a>在application当中配置cron值<br  /><div class="outline-text-5" id="text-orgheadline13">
<div class="org-src-container">

<pre class="src src-java">cron.expression="*/5 * * * * ?"
</pre>
</div>
</div></li>
<li><a id="orgheadline14"></a>在需要添加定时任务的方法上面添加cron配置的value值即可<br  /><div class="outline-text-5" id="text-orgheadline14">
<div class="org-src-container">

<pre class="src src-java">@Scheduled(cron = "${cron.expression}")
public void reportCurrentTime() {
    System.out.println("The time is now " + dateFormat.format(new Date()));
}
</pre>
</div>
</div></li></ul>
</div>
<div id="outline-container-orgheadline16" class="outline-4">
<h4 id="orgheadline16">cron maker</h4>
<div class="outline-text-4" id="text-orgheadline16">
<p>
这是专门生成cron的一个网站：<a href="http://www.cronmaker.com/">http://www.cronmaker.com/</a>
</p>
</div>
</div>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-07-02</pubDate>
      <guid>http://127.0.0.1/blog/2016/06/11/spring-boot-schedule-task-/</guid>
    </item>
    <item>
      <title>Java枚举</title>
      <link>http://127.0.0.1/blog/2016/06/24/java枚举/</link>
      <description><![CDATA[<div>
    <section id="wrapper">
        <article class="post">
            <header>
                    <h1>Java枚举</h1>
            </header>
            <br />
            <section id="post-body">
                
<div id="outline-container-orgheadline10" class="outline-2">
<h2 id="orgheadline10">Java枚举的使用</h2>
<div class="outline-text-2" id="text-orgheadline10">
</div><div id="outline-container-orgheadline1" class="outline-3">
<h3 id="orgheadline1">用法列表</h3>
<div class="outline-text-3" id="text-orgheadline1">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<tbody>
<tr>
<td class="org-left">values</td>
<td class="org-left">获取枚举当中所有的枚举</td>
</tr>

<tr>
<td class="org-left">compareTo</td>
<td class="org-left">一个枚举的实现了compareTo对象</td>
</tr>

<tr>
<td class="org-left">valueOf</td>
<td class="org-left">根据一个枚举constant获取枚举</td>
</tr>

<tr>
<td class="org-left">toString</td>
<td class="org-left">可将Enum直接转换为String对象</td>
</tr>

<tr>
<td class="org-left">EnumMap</td>
<td class="org-left">&#xa0;</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-orgheadline8" class="outline-3">
<h3 id="orgheadline8">代码</h3>
<div class="outline-text-3" id="text-orgheadline8">
</div><div id="outline-container-orgheadline2" class="outline-4">
<h4 id="orgheadline2">WeekEnum</h4>
<div class="outline-text-4" id="text-orgheadline2">
<div class="org-src-container">

<pre class="src src-java">package com.pgy.base;

import java.util.ArrayList;
import java.util.List;

public enum WeekEnum {
    Monday(1, "周一"),

    Tuseday(2, "周二"),

    Wednesday(3, "周三"),

    Thursday(4, "周四"),

    Friday(5, "周五"),

    Saturday(6, "周六"),

    Sunday(7, "周七"),

    ;

    private int    code;
    private String description;

    public int getCode() {
        return code;
    }

    public void setCode(int code) {
        this.code = code;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    private WeekEnum(int code, String description) {
        this.code = code;
        this.description = description;
    }

}
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline3" class="outline-4">
<h4 id="orgheadline3">values</h4>
<div class="outline-text-4" id="text-orgheadline3">
<p>
下面的两个方法，可以写到枚举类当中，直接进行调用
</p>
<div class="org-src-container">

<pre class="src src-java">// 遍历枚举，寻找code对象的枚举
public WeekEnum findOneByCode(int code) {
    for (WeekEnum demo : WeekEnum.values()) {
        if (demo.getCode() == code) {
            return demo;
        }
    }
    return null;
}
// 遍历枚举，获取所有的code值 
public List&lt;Integer&gt; allCode() {
    List&lt;Integer&gt; allCodes = new ArrayList&lt;Integer&gt;();
    for (WeekEnum demo : WeekEnum.values()) {
        allCodes.add(demo.getCode());
    }
    return allCodes;
}
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline4" class="outline-4">
<h4 id="orgheadline4">compareTo</h4>
<div class="outline-text-4" id="text-orgheadline4">
<div class="org-src-container">

<pre class="src src-java">System.out.println(WeekEnum.Friday.compareTo(WeekEnum.Sunday));//-2
System.out.println(WeekEnum.Friday.compareTo(WeekEnum.Monday));//4
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline5" class="outline-4">
<h4 id="orgheadline5">valueOf</h4>
<div class="outline-text-4" id="text-orgheadline5">
<p>
valueOf入参为Enum的Enum Constant，否则会抛出异常;
valueOf还可以指定Enum的Type，及Enum Constant去获取枚举
</p>
<div class="org-src-container">

<pre class="src src-java">System.out.println(WeekEnum.valueOf("Friday").getCode()); //5
System.out.println(WeekEnum.valueOf(WeekEnum.class, "Friday").getCode()); //5
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline6" class="outline-4">
<h4 id="orgheadline6">toString</h4>
<div class="outline-text-4" id="text-orgheadline6">
<div class="org-src-container">

<pre class="src src-java">System.out.println(WeekEnum.Friday.toString());//Friday
</pre>
</div>
</div>
</div>
<div id="outline-container-orgheadline7" class="outline-4">
<h4 id="orgheadline7">EnumMap</h4>
<div class="outline-text-4" id="text-orgheadline7">
<div class="org-src-container">

<pre class="src src-java">public static void enumToMap() {
       EnumMap&lt;WeekEnum, String&gt; enumMap = new EnumMap&lt;WeekEnum, String&gt;(WeekEnum.class);
       enumMap.put(WeekEnum.Monday, "周一");
       enumMap.put(WeekEnum.Tuseday, "周二");
       enumMap.put(WeekEnum.Wednesday, "周三");

       for (WeekEnum weekEnum : enumMap.keySet()) {
           System.out.println("key=" + weekEnum.name() + ",value=" + enumMap.get(weekEnum));
       }
   }
</pre>
</div>
</div>
</div>
</div>
<div id="outline-container-orgheadline9" class="outline-3">
<h3 id="orgheadline9">其他说明</h3>
<div class="outline-text-3" id="text-orgheadline9">
<ul class="org-ul">
<li>enum无法再继承其他的，因为java不支持多继承</li>
<li>EnumMap当中的泛型为Enum对象</li>
</ul>
</div>
</div>
</div>

            </section>
    </section>
</div>
]]></description>
      <pubDate>2016-06-27</pubDate>
      <guid>http://127.0.0.1/blog/2016/06/24/java枚举/</guid>
    </item>
  </channel>
</rss>